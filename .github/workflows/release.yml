name: Release
on:
  push:
    branches:
      - publish-nodejs

jobs:
  build-nodejs-sdk:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: ubuntu-22.04
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |
              rustup install 1.85.0
              rustup default 1.85.0
              yarn build
              strip -x *.node
            artifact-name: linux-x64-musl

          - host: ubuntu-22.04
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |
              rustup install 1.85.0
              rustup default 1.85.0
              rustup target add aarch64-unknown-linux-gnu
              yarn build --target aarch64-unknown-linux-gnu
              aarch64-unknown-linux-gnu-strip *.node
            artifact-name: linux-aarch64

          #   - host: ubuntu-22.04
          #     docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          #     build: |
          #       rustup target add aarch64-unknown-linux-musl
          #       yarn build --target aarch64-unknown-linux-musl
          #       /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node
          #     artifact-name: linux-aarch64-musl

          - host: macos-13
            architecture: x64
            build: |
              rustup install 1.85.0
              rustup default 1.85.0
              yarn build
              strip -x *.node
            artifact-name: macos

          - host: windows-latest
            build: |
              rustup install 1.85.0
              rustup default 1.85.0
              yarn build
            architecture: x64
            artifact-name: windows

          - host: ubuntu-22.04
            build: |
              rustup install 1.85.0
              rustup default 1.85.0
              yarn build
              strip *.node
            artifact-name: linux-x64

          - host: macos-13
            target: aarch64-apple-darwin
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              rustup install 1.85.0
              rustup default 1.85.0
              rustup target add aarch64-apple-darwin
              yarn build --target aarch64-apple-darwin
              strip -x *.node
            artifact-name: macos-aarch64

    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 18
          check-latest: true
          architecture: ${{ matrix.settings.architecture }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: ${{ matrix.settings.target }}

      - name: Install dependencies
        working-directory: nodejs
        run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Build
        if: ${{ !matrix.settings.docker }}
        working-directory: nodejs
        run: ${{ matrix.settings.build }}

      - name: Build in Docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: "--user 0:0 -v ${{ github.workspace }}:/build -w /build/nodejs"
          run: ${{ matrix.settings.build }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.artifact-name }}
          path: nodejs/longport.*.node

  build:
    needs:
      - build-nodejs-sdk
    runs-on: ubuntu-22.04
    steps:
      - run: echo "All builds are done"

  publish-nodejs-sdk:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Update versions
        run: node ./.github/misc/update_jssdk_version.mjs $(sed -nE 's/^\s*version = "(.*?)"/\1/p' nodejs/Cargo.toml)
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
      - name: Install napi-rs/cli
        run: npm install -g @napi-rs/cli
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./nodejs/artifacts
          pattern: bindings-*
          merge-multiple: true
      - name: Move artifacts
        run: napi artifacts
        working-directory: ./nodejs
      - name: List packages
        run: ls -R ./npm
        shell: bash
        working-directory: ./nodejs
      # - name: Publish
      #   run: |
      #     echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      #     npm publish --access public
      #   working-directory: ./nodejs
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
